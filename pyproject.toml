[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "FujiShaderGPU"
version = "0.1.1"
description = "Lightning fast terrain shader for a big Cloud Optimized GeoTIFF"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Fumihiko IKEGAMI", email = "f.ikegami@gmail.com"},
]
maintainers = [
    {name = "Fumihiko IKEGAMI", email = "f.ikegami@gmail.com"},
]
keywords = [
    "DEM", "terrain", "visualization", "GPU", "CUDA", "CuPy",
    "shader", "renderer", "geospatial", "COG", "QGIS"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Visualization",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: GPU :: NVIDIA CUDA",
]
requires-python = ">=3.8"

dependencies = [
    "numpy>=1.21.0",
    "cupy-cuda12x>=13.4.0",  # または cupy-cuda12x for CUDA 12
    "rasterio>=1.3.0",
    "psutil>=5.8.0",
    "GDAL>=3.0.0",
]

[project.optional-dependencies]
# 高度な地形分析機能用
full = [
    "scipy>=1.7.0",
    "scikit-image>=0.19.0",
]
# 開発用
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
]
# ドキュメント生成用
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.23.0",
]
# ベンチマーク用
benchmark = [
    "pytest-benchmark>=4.0.0",
    "memory-profiler>=0.60.0",
]

[project.urls]
Homepage = "https://github.com/geoign/FujiShaderGPU"
Documentation = "https://github.com/geoign/FujiShaderGPU"
Repository = "https://github.com/geoign/FujiShaderGPU.git"
Issues = "https://github.com/geoign/FujiShaderGPU/issues"

[project.scripts]
fujishadergpu = "FujiShaderGPU.main:main"

[tool.setuptools.package-data]
FujiShaderGPU = ["*.json", "*.yaml", "*.yml"]

[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # デフォルトの除外設定
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | images
)/
'''

[tool.isort]
profile = "black"
line_length = 120
known_third_party = ["numpy", "cupy", "cupyx", "rasterio", "osgeo", "scipy", "psutil"]
known_first_party = ["FujiShaderGPU"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=FujiShaderGPU",
    "--cov-report=html",
    "--cov-report=term-missing",
]

[tool.coverage.run]
source = ["FujiShaderGPU"]
omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

# パッケージ設定の詳細
[tool.setuptools.packages.find]
where = ["."]
include = ["FujiShaderGPU*"]
exclude = ["tests*", "docs*", "examples*", "images*"]
